{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/media/harishkrishnan/1/Learnings/React/first-next/pages/post.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\n\nvar Post = function Post(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, \"Comments for Post #\", id), comments.map(function (comment) {\n    return __jsx(Comment, _extends({}, comment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }));\n  }));\n};\n\nvar Comment = function Comment(_ref2) {\n  var email = _ref2.email,\n      body = _ref2.body;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, email), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, body));\n};\n\nPost.getInitialProps = function _callee(_ref3) {\n  var query, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref3.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id)));\n\n        case 3:\n          res = _context.sent;\n          data = res.data;\n          return _context.abrupt(\"return\", _objectSpread({}, query, {\n            comments: data\n          }));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["/media/harishkrishnan/1/Learnings/React/first-next/pages/post.js"],"names":["axios","Post","id","comments","map","comment","Comment","email","body","getInitialProps","query","get","res","data"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAOC,QAAP,QAAOA,QAAP;AAAA,SACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,EAAxB,CADF,EAEGC,QAAQ,CAACC,GAAT,CAAa,UAAAC,OAAO;AAAA,WACnB,MAAC,OAAD,eAAaA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADmB;AAAA,GAApB,CAFH,CADW;AAAA,CAAb;;AASA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,IAAV,SAAUA,IAAV;AAAA,SACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAFF,CADc;AAAA,CAAhB;;AAOAP,IAAI,CAACQ,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAAA;AAAA,2CACHV,KAAK,CAACW,GAAN,gEACwCD,KAAK,CAACR,EAD9C,EADG;;AAAA;AACfU,UAAAA,GADe;AAIbC,UAAAA,IAJa,GAIJD,GAJI,CAIbC,IAJa;AAAA,6DAKTH,KALS;AAKFP,YAAAA,QAAQ,EAAEU;AALR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeZ,IAAf","sourcesContent":["import axios from \"axios\";\n\nconst Post = ({ id, comments }) => (\n  <div>\n    <h1>Comments for Post #{id}</h1>\n    {comments.map(comment => (\n      <Comment {...comment} />\n    ))}\n  </div>\n);\n\nconst Comment = ({ email, body }) => (\n  <div>\n    <h5>{email}</h5>\n    <p>{body}</p>\n  </div>\n);\n\nPost.getInitialProps = async ({ query }) => {\n  const res = await axios.get(\n    `https://jsonplaceholder.typicode.com/comments?postId=${query.id}`\n  );\n  const { data } = res;\n  return { ...query, comments: data };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}